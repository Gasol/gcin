--- a/eggtrayicon.cpp
+++ b/eggtrayicon.cpp
@@ -349,7 +349,7 @@
 
       gdk_window_add_filter (gdkwin, egg_tray_icon_manager_filter, icon);
 
-      if (dock_if_realized && GTK_WIDGET_REALIZED (GTK_WIDGET (icon)))
+      if (dock_if_realized && gtk_widget_get_realized (GTK_WIDGET (icon)))
 	egg_tray_icon_send_dock_request (icon);
 
       egg_tray_icon_get_orientation_property (icon);
--- a/anthy.cpp
+++ b/anthy.cpp
@@ -1121,7 +1121,7 @@
 
 int anthy_visible()
 {
-  return GTK_WIDGET_VISIBLE(win_anthy);
+  return gtk_widget_get_visible(win_anthy);
 }
 
 extern gboolean force_show;
--- a/eve.cpp
+++ b/eve.cpp
@@ -762,13 +762,13 @@
     return FALSE;
   switch (current_method_type()) {
     case method_type_PHO:
-      return gwin_pho && GTK_WIDGET_VISIBLE(gwin_pho);
+      return gwin_pho && gtk_widget_get_visible(gwin_pho);
 #if USE_TSIN
     case method_type_TSIN:
-      return gwin0 && GTK_WIDGET_VISIBLE(gwin0);
+      return gwin0 && gtk_widget_get_visible(gwin0);
 #endif
     case method_type_INT_CODE:
-	  return gwin_int && GTK_WIDGET_VISIBLE(gwin_int);
+	  return gwin_int && gtk_widget_get_visible(gwin_int);
 #if USE_ANTHY
     case method_type_ANTHY:
       return anthy_visible();
@@ -776,7 +776,7 @@
     default:
       if (!gwin_gtab)
         return FALSE;
-      return gwin_gtab && GTK_WIDGET_VISIBLE(gwin_gtab);
+      return gwin_gtab && gtk_widget_get_visible(gwin_gtab);
   }
 
   return FALSE;
--- a/gtab.cpp
+++ b/gtab.cpp
@@ -1365,7 +1365,7 @@
     return feedkey_pho(key, 0);
 
   if (poo.same_pho_query_state == SAME_PHO_QUERY_none && gwin_pho &&
-    GTK_WIDGET_VISIBLE(gwin_pho))
+    gtk_widget_get_visible(gwin_pho))
      hide_win_pho();
 
 
--- a/win-gtab.cpp
+++ b/win-gtab.cpp
@@ -569,7 +569,7 @@
 
 //  dbg("show_win_gtab()\n");
 #if UNIX
-  if (!GTK_WIDGET_VISIBLE(gwin_gtab))
+  if (!gtk_widget_get_visible(gwin_gtab))
 #endif
     gtk_widget_show(gwin_gtab);
 
--- a/win0.cpp
+++ b/win0.cpp
@@ -249,12 +249,12 @@
     return;
 #endif
   if (gcin_on_the_spot_key) {
-    if (gwin0 && GTK_WIDGET_VISIBLE(gwin0))
+    if (gwin0 && gtk_widget_get_visible(gwin0))
       hide_win0();
     return;
   }
 
-  if (button_pho && !GTK_WIDGET_VISIBLE(button_pho))
+  if (button_pho && !gtk_widget_get_visible(button_pho))
     gtk_widget_show(button_pho);
 
   disp_pho_sub(label_pho, index, pho);
@@ -319,7 +319,7 @@
 #if 0
   GtkWidget *widget =chars[index].line;
 
-  if (!GTK_WIDGET_VISIBLE(widget)) {
+  if (!gtk_widget_get_visible(widget)) {
     widget = chars[index].vbox;
   }
 #endif
@@ -429,7 +429,7 @@
   win_y = y;
 
 #if WIN32
-  if (gwin1 && GTK_WIDGET_VISIBLE(gwin1)) {
+  if (gwin1 && gtk_widget_get_visible(gwin1)) {
     gtk_window_move(GTK_WINDOW(gwin1), x, y);
   }
 #endif
@@ -669,7 +669,7 @@
   if (gcin_pop_up_win && !tsin_has_input() && !force_show)
     return;
 #if UNIX
-  if (!GTK_WIDGET_VISIBLE(gwin0))
+  if (!gtk_widget_get_visible(gwin0))
 #endif
   {
     gtk_widget_show(gwin0);
--- a/win1.cpp
+++ b/win1.cpp
@@ -222,7 +222,7 @@
   if (!gwin1)
     p_err("disp_selections !gwin1");
 #if WIN32
-  if (!GTK_WIDGET_VISIBLE(gwin1)) {
+  if (!gtk_widget_get_visible(gwin1)) {
     gtk_widget_show(gwin1);
   }
 #endif
@@ -241,7 +241,7 @@
 #endif
 
 #if UNIX
-  if (!GTK_WIDGET_VISIBLE(gwin1)) {
+  if (!gtk_widget_get_visible(gwin1)) {
     gtk_widget_show(gwin1);
   }
 #endif
@@ -249,7 +249,7 @@
 
 void raise_tsin_selection_win()
 {
-  if (gwin1 && GTK_WIDGET_VISIBLE(gwin1))
+  if (gwin1 && gtk_widget_get_visible(gwin1))
     gtk_window_present(GTK_WINDOW(gwin1));
 }
 
--- a/tray.cpp
+++ b/tray.cpp
@@ -384,7 +384,7 @@
   gtk_widget_show_all (GTK_WIDGET (egg_tray_icon));
   tray_da_win = gtk_widget_get_window(da);
   // tray window is not ready ??
-  if (!tray_da_win || !GTK_WIDGET_DRAWABLE(da)) {
+  if (!tray_da_win || !gtk_widget_is_drawable(da)) {
     gtk_widget_destroy(GTK_WIDGET(egg_tray_icon));
     da = NULL;
     return FALSE;
